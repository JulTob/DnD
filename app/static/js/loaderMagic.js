/* MagicLoader.js  ‚ú®
 * Animaci√≥n de c√≠rculo m√°gico + control del loader
 * Autor: ChatGPT (o3)
 */

// ----  GLOBALS  -------------------------------------------------
let solBaseScale = 0.18;
let solBeatAmp   = 0.10;   // 8 % size pulsation
let solSpinSpeed = 0.0;    // degrees per frame   (tweak to taste)

let backgroundAlpha = 0;  // Start fully transparent
const maxAlpha = 255;

let polygons = [];          // will hold every planet/poly
const MIN_SIDES = 3;
const MAX_SIDES = 12;

/* --------------------  1. POOLS DE S√çMBOLOS  -------------------- */
const spinnerChars = [
  '‚å≠','‚ß≤','‚Äª','‚öï','‚ò•',
  '‚ò¢','‚òò','ìÇÄ','·Øº','€û','‡øÑ','‚ú°','‚çü','‚≠í','‚ú©','‚úØ','‚õ§','‚õß','‚õ•',
  '‚õ¶','‚öù','‚≠ë','‚òÜ','‚úß','‚ùâ','‚ùÑ','‚ùÖ','‚ùÜ',
  '‚ò¨','‚ò´','€ù','€©','ÿé','‚ßù','ñßµ','ìá¨','üúπ','ñ£ä','ñ•†','üùû','üùü',
  '‚è£','‚¨†','‚¨°','Œ®','‚Ñú','‚≥©','Œ©','‚Ñ¶','‚Ñß','êÉ¢','êÉØ','‚ôß','‚ô°','‚ô¢','‚ô§',
  'ìÑÄ','ìÜó','ìÜô','ìÜö','ê¶ê','‡øì','‡øî','‡ºÑ','‡ºÖ','‡ºÜ','‡ºª','‡º∫',
  '‚õ©','‚ô®','êÇ°','êÅä','êÄº','‚öïÔ∏é','‚õª','üù§','üù™','üúæ','üùÅ','üú±','ùõÄ','∆±',
  '‚è≤','‚ö≥','‚ö¥','‚öµ','‚ö∂','‚ö∏','‚ôÜ','‚ôÖ','‚ôÑ','‚ôÉ','‚ôÅ','‚òø','üúØ','üú©','üú¶',
  'üú•','üú£','‚õ¢','ìç¢','ùñã','‚òâ','‚úùÔ∏é','‚ú†','‚ò©','‚ô∞','‚ô±','‚òì','‚öúÔ∏é',
  '‚ùÄ','‚úø','‚ù¶','‚èö','Œò','œü',
  '·ö†','·ö°','·ö£','·õÉ','·õÑ','·õÜ','·õà','·õâ','·õï','·õñ','·õó','·õò','·õô','·õ™',
  '·õ©','·õ®','·õ¶','·õ•','·õ§','·õ£','·õ¢','·õ°','·õü','·õû','·õù','·õú','·õ∞',
  '·õØ','·õÆ','·õ≠','·õ¨','·õ´','‚öä','‚öã','‚öå','‚öç','‚öé','‚öè','ùåÄ','ùåÅ','ùåÇ',
  'ùåÉ','ùåÑ','ùåÖ','‚ò∞','‚ò±','‚ò≤','‚ò≥','‚ò¥','‚òµ','‚ò∂','‚ò∑',
  '‡ºÄ','‡ºÅ','‡ºÇ','‡ºÉ','‡ºÑ','‡ºÖ','‡ºÜ','‡ºá','‡ºä','‡ºí','‡ºì','‡ºî','‡ºó','‚óá','‚óà',
  '‚ú¶','‚óã','‚òâ', '‚õß','‚ú∂','‚≠í','‚ú©','‚úØ','‚õ§','‚õß','‚õ•',
	'‚õ¶','‚öù','‚ôÅ','‚òÖ', '·ö†','·ö°','·ö¢','·ö£','·ö§','·ö•',
	'·ö¶','·öß','·ö®','·ö©','·ö™','·öµ','·ö¥','·ö≥','·ö≤','·ö±',
	'·ö∞','·öØ','·öÆ','·ö≠','·ö¨','·ö´','·ö∂','·ö∑','·ö∏','·öπ','·ö∫',
	'·öª','·öº','·öΩ','·öæ','·öø','·õÄ','·õã','·õä','·õâ','·õà',
	'·õá','·õÜ','·õÖ','·õÑ','·õÉ','·õÇ','·õÅ','·õå','·õç','·õé',
	'·õè','·õê','·õë','·õí','·õì','·õî','·õï','·õñ','·õ°','·õ†','·õü',
	'·õû','·õù','·õú','·õõ','·õö','·õô','·õò','·õó','·õ¢',
	'·õ£','·õ§','·õ•','·õ¶','·õß','·õ®','·õ©','·õ™','·õ´','·õ¨',
	'·õ≠','·õÆ','·õØ','·õ∞',
];

const centerPool = [
	'‚òØ', 'üúÅ','‚å≠','‚ß≤','‚ôî','‚ôï','‚ôñ','‚ôó', 'ñ£ì','÷é','÷ç','ñ£ê','‚åò',
	'‚ôô','‚öö','‚ò§','‚Äª','‚öï','‚ò•', '‚ôî','‚ôï','‚ôñ','‚ôó','‚ôô','‚öö','‚ò§',
	'üúè','‚ò†','‚ò£','‚öñ','‚öõ','‚éà','‚ò∏','ëÅç','‚öôÔ∏é','‚òØ','‡øä','‡øã','‡øå',
	'üúÅ', 'ìåñ', 'üúè','‚ò†','‚ò£','‚öñ','‚öõ','‚éà','‚ò∏','ëÅç','‚öôÔ∏é',
	'‚òØ','‡øä','‡øã','‡øå','‚òÆ',"‚óØ",'‚éä','‚èÅ','‚èÑ','‚èÄ','‚èÉ','‚èÇ','‚èÖ',
	];
const orbitPool  = spinnerChars;

/* --------------------  2. P5 SKETCH  -------------------- */
let centerSymbol, orbitSymbols = [];

/* Refresca s√≠mbolos cada vez que volvemos a mostrar el loader */
function initSymbols () {
		centerSymbol = random(centerPool);
		orbitSymbols = Array.from(
				{ length: int(random(4, 12)) },
				() => ({
					symbol: random(orbitPool),
					sides : int(random(3, 10)),         // ‚Üê 3 to 12 sides
					angle : random(360),
					radius: random(width * 0.1, width*0.8 ),
					speed : random(-2.0, 2.0),
					phase : random(360),
					}),
				);
		}
function planet(sym, sides, max_radius, speed, phase) {
  push();
	// center & rotate the whole ring
	translate(width/2, height/2);
	rotate( frameCount * speed + 2*phase);
	radius = frameCount * speed % max_radius
	// 1Ô∏è‚É£ draw the semi-transparent polygon (the ‚Äúrail‚Äù)
	stroke(255, 215, 0, 255* (1-abs(cos(frameCount / sides +phase))));  // gold with 60/255 alpha
	noFill();
	beginShape();
	  for (let i = 0; i < sides; i++) {
		let ang = i * 360 / sides;
		let x   = cos(ang) * radius;
		let y   = sin(ang) * radius;
		vertex(x, y);
	  }
	endShape(CLOSE);

	// 2Ô∏è‚É£ draw the translucent runes at each vertex
	const txtSz = max_radius * 0.025 * (2-sin(frameCount / sides +phase)) ;          // tweak size if you like
	textSize(txtSz);
	noStroke();
	for (let i = 0; i < sides; i++) {
	  let ang = i * 360 / sides;
	  let x   = cos(ang) * radius;
	  let y   = sin(ang) * radius;

	push();
        // center on this vertex
        translate(x, y);
        // rotate around its own center:
        // we add i*offset so runes don't all line up in lock-step
        rotate(frameCount * speed * i + radians(i * (360 / sides)));
        fill(255, 215, 0, int(map(radius, 0, max_radius, 10, 255)));
        text(sym, 0, 0);
      pop();

	}
  pop();
}

function sol(sym, spin = solSpinSpeed, base = solBaseScale, beat = solBeatAmp) {
		push();
		translate(width / 2, height / 2);

		// 1Ô∏è‚É£ rotation
		rotate(frameCount * spin);

		// 2Ô∏è‚É£ heartbeat scaling
		const pulse = 1 + abs(beat * (sin(frameCount * 2) + sin(frameCount * 3)+ sin(frameCount * 5) )); // 4 = beats per rotation cycle
		const ts    = base * width * pulse;
		textSize(ts);

		// 3Ô∏è‚É£ aura (two translucent strokes behind the main rune)
		fill(255, 215, 0, 50);     // faint golden halo
		glowColor = color(255, 215, 0, 70);
		glow(glowColor, 10);

		fill(255, 215, 0, 200);  // bright core glyph
		text(sym, 0, 0);

		pop();
		}


function setup () {
		const size = Math.max(window.innerWidth, window.innerHeight)//, 420);
		let canvas = createCanvas(size, size);
		canvas.parent('p5-holder');
		angleMode(DEGREES);
		textAlign(CENTER, CENTER);
		textSize(size * 0.18);
		noStroke();
		initSymbols();
		frameRate(25);
		}

function windowResized() {
		// Responsiveness: redraw canvas on resize
		const size = Math.min(window.innerWidth, window.innerHeight, 420);
		resizeCanvas(size, size, true);
		textSize(size * 0.18);
		}

function glow(glowColor, blurriness) {
		drawingContext.shadowColor = glowColor;
		drawingContext.shadowBlur = blurriness;
		}

let frame = 0;
let angle = 1.1;

function draw () {
		clear();
		if (backgroundAlpha < maxAlpha) {
				backgroundAlpha += 5; // Increase speed as you like
				if (backgroundAlpha > maxAlpha) backgroundAlpha = maxAlpha;
				}
		background(0, backgroundAlpha);


		// Center symbol (sun) ‚Äì strong gold
		//fill(255, 215, 100, 100);
		//textSize(width * 0.18);
		//text(centerSymbol, 0, 0);
		sol(centerSymbol);

		const size = Math.max(window.innerWidth, window.innerHeight)*2//, 420);

		// Orbits: glowing gold
		//fill(255, 215, 0, 90);
		orbitSymbols.forEach(o => {
				planet(o.symbol, o.sides, o.radius * (width/420), o.speed, o.phase);
				});
		}



/* --------------------  3. CONTROL DEL LOADER  -------------------- */
const loader   = document.getElementById('loader');
const fullPage = document.getElementById('FullPage');

function showLoader () {
		loader.style.display   = 'flex';
		fullPage.style.display = 'none';
		initSymbols(); // nuevo dise√±o en cada ciclo
		loop();        // reanuda animaci√≥n
		}

function hideLoader () {
		loader.style.display   = 'none';
		fullPage.style.display = 'block';
		noLoop();      // detiene animaci√≥n
		}

/* --------------------  4. ENLACE DE EVENTOS  -------------------- */
// 4.1 ‚Äì Ocultamos loader tras la carga inicial completa.
window.addEventListener('load', hideLoader);

// 4.2 ‚Äì Formularios que recargan ‚Üí muestran loader.
document.querySelectorAll('form')
		.forEach(f => f.addEventListener('submit', showLoader));

// 4.3 ‚Äì Botones con navegaci√≥n por JS.
document.querySelectorAll('button')
		.forEach(b => {
		  if (b.onclick && b.onclick.toString().includes('window.location.href')) {
			b.addEventListener('click', showLoader);
		  }
		});

// 4.4 ‚Äì Bot√≥n especial con generateList (aj√∫stalo a tu selector real).
const listBtn = document.querySelector('button[onclick^="generateList"]');
if (listBtn) listBtn.addEventListener('click', showLoader);

/* --------------------  5. S√çMBOLO ALEATORIO EN #spinner  --------- */
document.addEventListener('DOMContentLoaded', () => {
		const spin = document.getElementById('spinner');
		if (spin) spin.textContent = spinnerChars[Math.floor(Math.random() * spinnerChars.length)];
		});
